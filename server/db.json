{
  "users": [
    {
      "name": "Mostafa Mamdouh Mostafa",
      "email": "mmabdallah801@gmail.com",
      "password": "Asd123@@",
      "confirmPassword": "Asd123@@",
      "remembered": false,
      "id": "1"
    },
    {
      "name": "Keemo",
      "email": "mmabdallah801@gmail.com",
      "password": "Asd123@@",
      "confirmPassword": "Asd123@@",
      "remembered": false,
      "role": "student",
      "id": "2"
    },
    {
      "name": "Keemo",
      "email": "mmabdallah801@gmail.com",
      "password": "Asd123@@",
      "confirmPassword": "Asd123@@",
      "remembered": true,
      "role": "student",
      "id": "3"
    },
    {
      "name": "â€™Ahmed",
      "email": "admin@example.com",
      "password": "AdminPass123@@",
      "confirmPassword": "AdminPass123@@",
      "remembered": true,
      "role": "admin",
      "id": "4"
    },
    {
      "name": "Mostafa",
      "email": "asd@asd.com",
      "password": "Asd123@@@@",
      "confirmPassword": "Asd123@@@@",
      "remembered": false,
      "role": "student",
      "id": "k4uOpfA"
    }
  ],
  "exams": [
    {
      "id": "4",
      "title": "Angular Core",
      "description": "Covers core concepts of Angular framework",
      "duration": 20,
      "createdBy": "admin@example.com",
      "questions": [
        {
          "id": 2,
          "questionText": "Which decorator is used to define an Angular component?",
          "options": [
            "@Component",
            "@NgModule",
            "@Injectable",
            "@Directive"
          ],
          "correctAnswer": "@Component"
        },
        {
          "id": 3,
          "questionText": "What is the role of NgModule in Angular?",
          "options": [
            "Organize and bootstrap the application",
            "Define a component",
            "Handle routing",
            "Manage services"
          ],
          "correctAnswer": "Organize and bootstrap the application"
        },
        {
          "id": 4,
          "questionText": "How do you bind data to a template in Angular?",
          "options": [
            "{{ variable }}",
            "[variable]",
            "(variable)",
            "*variable"
          ],
          "correctAnswer": "{{ variable }}"
        },
        {
          "id": 5,
          "questionText": "What is the purpose of the *ngIf directive?",
          "options": [
            "Conditionally display an element",
            "Loop over a list",
            "Bind data",
            "Handle events"
          ],
          "correctAnswer": "Conditionally display an element"
        },
        {
          "id": 6,
          "questionText": "Which service is used to make HTTP requests in Angular?",
          "options": [
            "HttpClient",
            "HttpService",
            "FetchService",
            "ApiService"
          ],
          "correctAnswer": "HttpClient"
        },
        {
          "id": 7,
          "questionText": "What is the purpose of dependency injection in Angular?",
          "options": [
            "Provide services to components",
            "Manage routing",
            "Style components",
            "Handle events"
          ],
          "correctAnswer": "Provide services to components"
        },
        {
          "id": 8,
          "questionText": "How do you define a route in Angular?",
          "options": [
            "RouterModule.forRoot(routes)",
            "Route.define(routes)",
            "Router.add(routes)",
            "NgModule.routes(routes)"
          ],
          "correctAnswer": "RouterModule.forRoot(routes)"
        },
        {
          "id": 9,
          "questionText": "What is the purpose of the *ngFor directive?",
          "options": [
            "Loop over a list",
            "Conditionally display",
            "Bind events",
            "Style elements"
          ],
          "correctAnswer": "Loop over a list"
        },
        {
          "id": 10,
          "questionText": "How do you access route parameters in Angular?",
          "options": [
            "ActivatedRoute",
            "Router",
            "RouteService",
            "ParamService"
          ],
          "correctAnswer": "ActivatedRoute"
        },
        {
          "id": 11,
          "questionText": "What is the purpose of the @Injectable decorator?",
          "options": [
            "Mark a class as a service",
            "Define a component",
            "Create a directive",
            "Handle routing"
          ],
          "correctAnswer": "Mark a class as a service"
        },
        {
          "id": 12,
          "questionText": "What is two-way data binding in Angular?",
          "options": [
            "Binding data and events",
            "Binding only data",
            "Binding only events",
            "Binding styles"
          ],
          "correctAnswer": "Binding data and events"
        },
        {
          "id": 13,
          "questionText": "Which directive is used for two-way data binding?",
          "options": [
            "[(ngModel)]",
            "[ngModel]",
            "(ngModel)",
            "*ngModel"
          ],
          "correctAnswer": "[(ngModel)]"
        },
        {
          "id": 14,
          "questionText": "What is the purpose of Angular pipes?",
          "options": [
            "Transform data in templates",
            "Handle HTTP requests",
            "Define routes",
            "Manage services"
          ],
          "correctAnswer": "Transform data in templates"
        },
        {
          "id": 15,
          "questionText": "How do you create a custom pipe in Angular?",
          "options": [
            "@Pipe",
            "@Component",
            "@Directive",
            "@Injectable"
          ],
          "correctAnswer": "@Pipe"
        },
        {
          "id": 16,
          "questionText": "What is the purpose of the Router service in Angular?",
          "options": [
            "Navigate between routes",
            "Make HTTP requests",
            "Manage services",
            "Bind data"
          ],
          "correctAnswer": "Navigate between routes"
        },
        {
          "id": 17,
          "questionText": "What is the lifecycle hook called after a component is initialized?",
          "options": [
            "ngOnInit",
            "ngOnChanges",
            "ngAfterViewInit",
            "ngOnDestroy"
          ],
          "correctAnswer": "ngOnInit"
        },
        {
          "id": 18,
          "questionText": "How do you pass data from a parent to a child component?",
          "options": [
            "@Input",
            "@Output",
            "@ViewChild",
            "@Inject"
          ],
          "correctAnswer": "@Input"
        },
        {
          "id": 19,
          "questionText": "What is the purpose of the async pipe in Angular?",
          "options": [
            "Handle asynchronous data",
            "Loop over data",
            "Bind events",
            "Style elements"
          ],
          "correctAnswer": "Handle asynchronous data"
        },
        {
          "id": 20,
          "questionText": "How do you lazy-load a module in Angular?",
          "options": [
            "loadChildren",
            "importModule",
            "lazyModule",
            "asyncModule"
          ],
          "correctAnswer": "loadChildren"
        }
      ]
    },
    {
      "id": "5",
      "title": "React Basics",
      "description": "Introductory test on React JS",
      "duration": 20,
      "createdBy": "admin@example.com",
      "questions": [
        {
          "id": 3,
          "questionText": "How do you create a functional component in React?",
          "options": [
            "function MyComponent() {}",
            "class MyComponent {}",
            "const MyComponent = () => {}",
            "component MyComponent() {}"
          ],
          "correctAnswer": "const MyComponent = () => {}"
        },
        {
          "id": 5,
          "questionText": "How do you pass data to a React ?",
          "options": [
            "Props",
            "State",
            "Hooks",
            "Context"
          ],
          "correctAnswer": "Props"
        },
        {
          "id": 6,
          "questionText": "What is the purpose of useState hook?",
          "options": [
            "Manage state in functional components",
            "Handle routing",
            "Fetch data",
            "Style components"
          ],
          "correctAnswer": "Manage state in functional components"
        },
        {
          "id": 7,
          "questionText": "How do you handle events in ?",
          "options": [
            "onClick={function}",
            "addEventListener",
            "bindEvent",
            "attachEvent"
          ],
          "correctAnswer": "onClick={function}"
        },
        {
          "id": 9,
          "questionText": "How do you update state in React?",
          "options": [
            "setState",
            "updateState",
            "changeState",
            "modifyState"
          ],
          "correctAnswer": "setState"
        },
        {
          "id": 10,
          "questionText": "What is the purpose of useEffect hook?",
          "options": [
            "Handle side effects",
            "Manage state",
            "Render components",
            "Style elements"
          ],
          "correctAnswer": "Handle side effects"
        },
        {
          "id": 11,
          "questionText": "How do you conditionally render in React?",
          "options": [
            "Using && or ternary operators",
            "Using if statements in JSX",
            "Using switch cases",
            "Using loops"
          ],
          "correctAnswer": "Using && or ternary operators"
        },
        {
          "id": 12,
          "questionText": "What is the purpose of the key prop in React?",
          "options": [
            "Uniquely identify elements in a list",
            "Style components",
            "Bind events",
            "Fetch data"
          ],
          "correctAnswer": "Uniquely identify elements in a list"
        },
        {
          "id": 13,
          "questionText": "How do you create a class component in React?",
          "options": [
            "class MyComponent extends React.Component {}",
            "function MyComponent() {}",
            "const MyComponent = () => {}",
            "component MyComponent {}"
          ],
          "correctAnswer": "class MyComponent extends React.Component {}"
        },
        {
          "id": 14,
          "questionText": "What is the Context API used for in React?",
          "options": [
            "Share data across components",
            "Manage routing",
            "Style components",
            "Handle events"
          ],
          "correctAnswer": "Share data across components"
        },
        {
          "id": 15,
          "questionText": "How do you import React in a file?",
          "options": [
            "import React from 'react'",
            "import React from 'react-dom'",
            "require React from 'react'",
            "import React from 'jsx'"
          ],
          "correctAnswer": "import React from 'react'"
        },
        {
          "id": 16,
          "questionText": "What is the purpose of React Router?",
          "options": [
            "Client-side routing",
            "Server-side routing",
            "Data fetching",
            "State management"
          ],
          "correctAnswer": "Client-side routing"
        },
        {
          "id": 17,
          "questionText": "How do you render a list in React?",
          "options": [
            "Using map()",
            "Using forEach()",
            "Using loop()",
            "Using renderList()"
          ],
          "correctAnswer": "Using map()"
        },
        {
          "id": 18,
          "questionText": "What is the default export of a React component?",
          "options": [
            "export default MyComponent",
            "export MyComponent",
            "module.exports = MyComponent",
            "export class MyComponent"
          ],
          "correctAnswer": "export default MyComponent"
        },
        {
          "id": 19,
          "questionText": "What is the purpose of the useRef hook?",
          "options": [
            "Reference DOM elements or values",
            "Manage state",
            "Handle side effects",
            "Fetch data"
          ],
          "correctAnswer": "Reference DOM elements or values"
        },
        {
          "id": 20,
          "questionText": "How do you prevent a component from re-rendering unnecessarily?",
          "options": [
            "React.memo",
            "useState",
            "useEffect",
            "useCallback"
          ],
          "correctAnswer": "React.memo"
        }
      ]
    },
    {
      "id": "6",
      "title": "Vue.js Overview",
      "description": "Vue fundamentals and syntax test",
      "duration": 20,
      "createdBy": "admin@example.com",
      "questions": [
        {
          "id": 1,
          "questionText": "What is Vue.js primarily used for?",
          "options": [
            "Building user interfaces",
            "Server-side scripting",
            "Database management",
            "Styling pages"
          ],
          "correctAnswer": "Building user interfaces"
        },
        {
          "id": 2,
          "questionText": "How do you define a Vue component?",
          "options": [
            "Vue.component()",
            "Vue.define()",
            "Vue.create()",
            "Vue.module()"
          ],
          "correctAnswer": "Vue.component()"
        },
        {
          "id": 3,
          "questionText": "What is the purpose of the v-bind directive?",
          "options": [
            "Bind data to attributes",
            "Handle events",
            "Loop over data",
            "Conditionally render"
          ],
          "correctAnswer": "Bind data to attributes"
        },
        {
          "id": 4,
          "questionText": "How do you handle events in Vue?",
          "options": [
            "v-on:click",
            "v-bind:click",
            "v-click",
            "v-event"
          ],
          "correctAnswer": "v-on:click"
        },
        {
          "id": 5,
          "questionText": "What is the purpose of the v-if directive?",
          "options": [
            "Conditionally render elements",
            "Loop over data",
            "Bind data",
            "Handle events"
          ],
          "correctAnswer": "Conditionally render elements"
        },
        {
          "id": 6,
          "questionText": "How do you define reactive data in Vue 3?",
          "options": [
            "ref() or reactive()",
            "data()",
            "state()",
            "computed()"
          ],
          "correctAnswer": "ref() or reactive()"
        },
        {
          "id": 7,
          "questionText": "What is the purpose of computed properties in Vue?",
          "options": [
            "Cache derived data",
            "Store static data",
            "Handle events",
            "Style components"
          ],
          "correctAnswer": "Cache derived data"
        },
        {
          "id": 8,
          "questionText": "How do you loop over a list in Vue?",
          "options": [
            "v-for",
            "v-loop",
            "v-foreach",
            "v-iterate"
          ],
          "correctAnswer": "v-for"
        },
        {
          "id": 9,
          "questionText": "What is the Vue CLI used for?",
          "options": [
            "Scaffold Vue projects",
            "Style components",
            "Manage routing",
            "Fetch data"
          ],
          "correctAnswer": "Scaffold Vue projects"
        },
        {
          "id": 10,
          "questionText": "How do you pass data from a parent to a child component in Vue?",
          "options": [
            "Props",
            "State",
            "Events",
            "Context"
          ],
          "correctAnswer": "Props"
        },
        {
          "id": 11,
          "questionText": "What is the purpose of the v-model directive?",
          "options": [
            "Two-way data binding",
            "One-way data binding",
            "Event handling",
            "Styling"
          ],
          "correctAnswer": "Two-way data binding"
        },
        {
          "id": 15,
          "questionText": "How do you create a Vue 3 app?",
          "options": [
            "createApp()",
            "new Vue()",
            "Vue.create()",
            "Vue.app()"
          ],
          "correctAnswer": "createApp()"
        },
        {
          "id": 16,
          "questionText": "What is the purpose of the setup() function in Vue 3?",
          "options": [
            "Define reactive data and methods",
            "Render templates",
            "Handle routing",
            "Style components"
          ],
          "correctAnswer": "Define reactive data and methods"
        },
        {
          "id": 17,
          "questionText": "How do you emit an event from a child to a parent component?",
          "options": [
            "$emit",
            "$on",
            "$dispatch",
            "$broadcast"
          ],
          "correctAnswer": "$emit"
        },
        {
          "id": 18,
          "questionText": "What is the purpose of Vuex in Vue?",
          "options": [
            "State management",
            "Routing",
            "Data fetching",
            "Styling"
          ],
          "correctAnswer": "State management"
        },
        {
          "id": 19,
          "questionText": "How do you define a slot in a Vue component?",
          "options": [
            "<slot>",
            "<template>",
            "<div>",
            "<component>"
          ],
          "correctAnswer": "<slot>"
        },
        {
          "id": 20,
          "questionText": "What is the benefit of using Vue's reactivity system?",
          "options": [
            "Automatic UI updates",
            "Faster rendering",
            "Better styling",
            "Easier routing"
          ],
          "correctAnswer": "Automatic UI updates"
        }
      ]
    },
    {
      "id": "7",
      "title": "HTML5 & Semantic Elements",
      "description": "Semantic tags and HTML5 structure",
      "duration": 20,
      "createdBy": "admin@example.com",
      "questions": [
        {
          "id": 1,
          "questionText": "What is a semantic element in HTML5?",
          "options": [
            "A tag with meaning about content",
            "A styling tag",
            "A scripting tag",
            "A layout tag"
          ],
          "correctAnswer": "A tag with meaning about content"
        },
        {
          "id": 2,
          "questionText": "Which HTML5 tag is used for the main content of a page?",
          "options": [
            "<main>",
            "<section>",
            "<article>",
            "<div>"
          ],
          "correctAnswer": "<main>"
        },
        {
          "id": 3,
          "questionText": "What is the purpose of the <header> tag?",
          "options": [
            "Define introductory content",
            "Define a footer",
            "Define a sidebar",
            "Define a section"
          ],
          "correctAnswer": "Define introductory content"
        },
        {
          "id": 4,
          "questionText": "Which HTML5 tag is used for standalone content?",
          "options": [
            "<article>",
            "<section>",
            "<aside>",
            "<div>"
          ],
          "correctAnswer": "<article>"
        },
        {
          "id": 5,
          "questionText": "What is the purpose of the <footer> tag?",
          "options": [
            "Define footer content",
            "Define a header",
            "Define a section",
            "Define a sidebar"
          ],
          "correctAnswer": "Define footer content"
        },
        {
          "id": 6,
          "questionText": "Which tag is used to group related elements?",
          "options": [
            "<section>",
            "<article>",
            "<div>",
            "<main>"
          ],
          "correctAnswer": "<section>"
        },
        {
          "id": 7,
          "questionText": "What is the purpose of the <nav> tag?",
          "options": [
            "Define navigation links",
            "Define a footer",
            "Define a header",
            "Define content"
          ],
          "correctAnswer": "Define navigation links"
        },
        {
          "id": 8,
          "questionText": "Which HTML5 tag is used for content aside from the main content?",
          "options": [
            "<aside>",
            "<section>",
            "<article>",
            "<div>"
          ],
          "correctAnswer": "<aside>"
        },
        {
          "id": 9,
          "questionText": "What is the purpose of the <figure> tag?",
          "options": [
            "Group media with a caption",
            "Define a section",
            "Define a footer",
            "Define a header"
          ],
          "correctAnswer": "Group media with a caption"
        },
        {
          "id": 10,
          "questionText": "Which tag is used for captions in a <figure> element?",
          "options": [
            "<figcaption>",
            "<caption>",
            "<title>",
            "<label>"
          ],
          "correctAnswer": "<figcaption>"
        },
        {
          "id": 11,
          "questionText": "What is the benefit of semantic HTML?",
          "options": [
            "Improved accessibility and SEO",
            "Faster rendering",
            "Better styling",
            "Easier scripting"
          ],
          "correctAnswer": "Improved accessibility and SEO"
        },
        {
          "id": 12,
          "questionText": "Which HTML5 tag is used for embedded audio?",
          "options": [
            "<audio>",
            "<video>",
            "<embed>",
            "<media>"
          ],
          "correctAnswer": "<audio>"
        },
        {
          "id": 13,
          "questionText": "Which HTML5 tag is used for embedded video?",
          "options": [
            "<video>",
            "<audio>",
            "<embed>",
            "<media>"
          ],
          "correctAnswer": "<video>"
        },
        {
          "id": 14,
          "questionText": "What is the purpose of the <canvas> tag?",
          "options": [
            "Draw graphics via JavaScript",
            "Embed video",
            "Define a section",
            "Style content"
          ],
          "correctAnswer": "Draw graphics via JavaScript"
        },
        {
          "id": 15,
          "questionText": "Which attribute is required for the <audio> tag to specify the source?",
          "options": [
            "src",
            "href",
            "link",
            "url"
          ],
          "correctAnswer": "src"
        },
        {
          "id": 16,
          "questionText": "What is the purpose of the <time> tag?",
          "options": [
            "Represent a specific time or date",
            "Define a timer",
            "Style text",
            "Embed media"
          ],
          "correctAnswer": "Represent a specific time or date"
        },
        {
          "id": 17,
          "questionText": "Which HTML5 tag is used to mark text as important?",
          "options": [
            "<mark>",
            "<strong>",
            "<em>",
            "<bold>"
          ],
          "correctAnswer": "<mark>"
        },
        {
          "id": 18,
          "questionText": "What is the purpose of the <details> tag?",
          "options": [
            "Create collapsible content",
            "Define a section",
            "Embed media",
            "Style text"
          ],
          "correctAnswer": "Create collapsible content"
        },
        {
          "id": 19,
          "questionText": "Which tag is used inside <details> for a summary?",
          "options": [
            "<summary>",
            "<title>",
            "<caption>",
            "<label>"
          ],
          "correctAnswer": "<summary>"
        },
        {
          "id": 20,
          "questionText": "What is the purpose of the data-* attribute in HTML5?",
          "options": [
            "Store custom data",
            "Style elements",
            "Handle events",
            "Define routes"
          ],
          "correctAnswer": "Store custom data"
        }
      ]
    },
    {
      "id": "8",
      "title": "CSS Flexbox & Grid",
      "description": "Test on layout systems using Flexbox and Grid",
      "duration": 20,
      "createdBy": "admin@example.com",
      "questions": [
        {
          "id": 1,
          "questionText": "What CSS property enables Flexbox ?",
          "options": [
            "display: flex;",
            "display: grid;",
            "flex: true;",
            "layout: flex;"
          ],
          "correctAnswer": "display: flex;"
        },
        {
          "id": 2,
          "questionText": "How do you align items along the main axis in Flexbox?",
          "options": [
            "justify-content",
            "align-items",
            "flex-align",
            "align-content"
          ],
          "correctAnswer": "justify-content"
        },
        {
          "id": 3,
          "questionText": "What does the 'flex' shorthand property include?",
          "options": [
            "flex-grow, flex-shrink, flex-basis",
            "flex-align, flex-justify",
            "flex-wrap, flex-flow",
            "flex-start, flex-end"
          ],
          "correctAnswer": "flex-grow, flex-shrink, flex-basis"
        },
        {
          "id": 4,
          "questionText": "How do you make a flex item take up remaining space?",
          "options": [
            "flex-grow: 1;",
            "flex-shrink: 1;",
            "flex-basis: auto;",
            "flex: auto;"
          ],
          "correctAnswer": "flex-grow: 1;"
        },
        {
          "id": 5,
          "questionText": "What is the purpose of the 'align-items' property in Flexbox?",
          "options": [
            "Align items along the cross axis",
            "Align items along the main axis",
            "Wrap items",
            "Space items evenly"
          ],
          "correctAnswer": "Align items along the cross axis"
        },
        {
          "id": 6,
          "questionText": "How do you enable CSS Grid?",
          "options": [
            "display: grid;",
            "display: flex;",
            "grid: true;",
            "layout: grid;"
          ],
          "correctAnswer": "display: grid;"
        },
        {
          "id": 7,
          "questionText": "What is the purpose of 'grid-template-columns'?",
          "options": [
            "Define column sizes",
            "Define row sizes",
            "Align items",
            "Space items"
          ],
          "correctAnswer": "Define column sizes"
        },
        {
          "id": 8,
          "questionText": "How do you create a grid with 3 equal columns?",
          "options": [
            "grid-template-columns: 1fr 1fr 1fr;",
            "grid-columns: 3;",
            "grid-template: 1fr;",
            "grid: 1fr 1fr 1fr;"
          ],
          "correctAnswer": "grid-template-columns: 1fr 1fr 1fr;"
        },
        {
          "id": 9,
          "questionText": "What does 'fr' stand for in CSS Grid?",
          "options": [
            "Fractional unit",
            "Fixed ratio",
            "Flexible row",
            "Fractional row"
          ],
          "correctAnswer": "Fractional unit"
        },
        {
          "id": 10,
          "questionText": "How do you align items in a grid along the column axis?",
          "options": [
            "justify-items",
            "align-items",
            "place-items",
            "grid-align"
          ],
          "correctAnswer": "justify-items"
        },
        {
          "id": 11,
          "questionText": "What is the purpose of 'flex-wrap' in Flexbox?",
          "options": [
            "Allow items to wrap to new lines",
            "Align items",
            "Space items",
            "Shrink items"
          ],
          "correctAnswer": "Allow items to wrap to new lines"
        },
        {
          "id": 12,
          "questionText": "How do you span an item across multiple grid columns?",
          "options": [
            "grid-column: span 2;",
            "grid-span: 2;",
            "span: 2;",
            "grid-column: 2;"
          ],
          "correctAnswer": "grid-column: span 2;"
        },
        {
          "id": 13,
          "questionText": "What is the default value of 'flex-direction'?",
          "options": [
            "row",
            "column",
            "row-reverse",
            "column-reverse"
          ],
          "correctAnswer": "row"
        },
        {
          "id": 14,
          "questionText": "How do you center a flex item both horizontally and vertically?",
          "options": [
            "justify-content: center; align-items: center;",
            "align: center;",
            "place-items: center;",
            "center: flex;"
          ],
          "correctAnswer": "justify-content: center; align-items: center;"
        },
        {
          "id": 15,
          "questionText": "What is the purpose of 'grid-gap'?",
          "options": [
            "Set spacing between grid items",
            "Set column sizes",
            "Align grid items",
            "Wrap grid items"
          ],
          "correctAnswer": "Set spacing between grid items"
        },
        {
          "id": 16,
          "questionText": "How do you make a flex item shrink proportionally?",
          "options": [
            "flex-shrink: 1;",
            "flex-grow: 1;",
            "flex: 1;",
            "shrink: 1;"
          ],
          "correctAnswer": "flex-shrink: 1;"
        },
        {
          "id": 17,
          "questionText": "What is the purpose of 'place-items' in CSS Grid?",
          "options": [
            "Shorthand for align-items and justify-items",
            "Set column sizes",
            "Define row sizes",
            "Space items"
          ],
          "correctAnswer": "Shorthand for align-items and justify-items"
        },
        {
          "id": 18,
          "questionText": "How do you reverse the order of flex items?",
          "options": [
            "flex-direction: row-reverse;",
            "flex-order: reverse;",
            "order: reverse;",
            "flex: reverse;"
          ],
          "correctAnswer": "flex-direction: row-reverse;"
        },
        {
          "id": 19,
          "questionText": "What is the purpose of 'grid-auto-rows'?",
          "options": [
            "Set size for implicit rows",
            "Set size for columns",
            "Align items",
            "Space items"
          ],
          "correctAnswer": "Set size for implicit rows"
        },
        {
          "id": 20,
          "questionText": "How do you make a flex container wrap items to the next line?",
          "options": [
            "flex-wrap: wrap;",
            "flex-flow: wrap;",
            "wrap: true;",
            "flex: wrap;"
          ],
          "correctAnswer": "flex-wrap: wrap;"
        }
      ]
    },
    {
      "title": "new exam",
      "description": "new exam added",
      "duration": 20,
      "questions": [
        {
          "examId": "dV4sNWG",
          "questionText": "new q?",
          "options": [
            "daa",
            "op2",
            "op3",
            "op4"
          ],
          "correctAnswer": "op1"
        },
        {
          "examId": "dV4sNWG",
          "questionText": "new q2?",
          "options": [
            "Hyper Text Markup Language",
            "Vue.define()",
            "Database management",
            "Vue.module()"
          ],
          "correctAnswer": "Vue.module()"
        }
      ],
      "id": "dV4sNWG"
    }
  ],
  "results": [
    {
      "examId": 4,
      "score": 2,
      "submittedAt": "2025-06-10T15:57:05.160Z",
      "studentId": "1",
      "id": 1
    },
    {
      "examId": 5,
      "score": 0,
      "submittedAt": "2025-06-10T15:59:34.351Z",
      "studentId": "1",
      "id": 2
    },
    {
      "examId": 4,
      "score": 12,
      "submittedAt": "2025-06-11T00:50:33.581Z",
      "studentId": "1",
      "id": 3
    },
    {
      "examId": 5,
      "score": 15,
      "submittedAt": "2025-06-11T00:56:07.078Z",
      "studentId": "k4uOpfA",
      "id": 4
    }
  ]
}